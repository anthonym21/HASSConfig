
- platform: moon 

- platform: wunderground
  api_key: !secret wunderground_api_key
  pwd_id: KCTDANBU51
  update_interval:
    minutes: 15
  monitored_conditions:
    - alerts
    - feelslike_string
    - temp_f
    - relative_humidity
    - precip_today_string
    - precip_1d_in
    - weather_1d
    - weather_1n
    - weather_2d
    - weather_2n
    - weather_3d
    - weather_3n
    - weather_4d
    - weather_4n
    - wind_mph

- platform: darksky
  api_key: !secret darksky_api_key
  update_interval:
    minutes: 15
  monitored_conditions:
      - precip_type
      - precip_probability
      - cloud_cover
      - minutely_summary
      - hourly_summary
      - apparent_temperature
      - temperature_high
      - temperature_low
      - uv_index
 
- platform: yweather
  forecast: 1
  name: yw_day1
  monitored_conditions:
    - weather
    - temp_min
    - temp_max
- platform: yweather
  forecast: 2
  name: yw_day2
  monitored_conditions:
    - weather
    - temp_min
    - temp_max
- platform: yweather
  forecast: 3
  name: yw_day3
  monitored_conditions:
    - weather
    - temp_min
    - temp_max
 
- platform: nzbget
  host: 192.168.86.41
  hide_in_default_view: true
  username: !secret nzbget_username
  password: !secret nzbget_password
  monitored_variables:
    - article_cache
    - average_download_rate
    - download_paused
    - download_size
    - post_paused
    - remaining_size
 
- platform: deluge
  host: 192.168.86.41
  username: !secret deluge_username
  password: !secret deluge_password
  monitored_variables:
    - current_status
    - download_speed
    - upload_speed
 
- platform: transmission
  host: 192.168.86.35 
  monitored_variables:
    - current_status 
    - active_torrents
     

- platform: sonarr
  api_key: !secret sonarr_api_key
  host: galaxy
  port: 8989
  monitored_conditions: 
    - upcoming
    - diskspace
    - queue
  days: 2
  unit: TB

- platform: radarr
  api_key: !secret radarr_api_key
  
- platform: fitbit
  client_id: !secret fitbit_client_id
  client_secret: !secret fitbit_client_secret
  clock_format: 24H
  hide_in_default_view: true
  monitored_resources:
    - "sleep/timeInBed"
    - "activities/steps"
    - "sleep/minutesAsleep"
    - "devices/battery"
    - "activities/heart"
    
# - platform: season
  # type: astronomical
  
- platform: google_wifi
  host: 192.168.86.1
  name: Google WiFi
  
- platform: hue

  #- platform: fail2ban
  #jails:
   # - hass-iptables
  #file_path: /fail2ban/fail2ban.log scan_interval: 900    
  
# MQTT SENSORS
      
- platform: mqtt
  state_topic: "smartthings/Garage Multi/temperature"
  name: garage_temperature
  friendly_name: Garage Temperature (Multi)
  unit_of_measurement: °F
  forceupdate: true
  retain: true

#- platform: mqtt
#  state_topic: "smartthings/Garage Bosch/temperature"
#  name: garage_temperature_bosch
#  friendly_name: Garage Temperature (Bosch)
#  unit_of_measurement: °F
#  forceupdate: true
#  retain: true
  
#- platform: mqtt
#  state_topic: 'smartthings/Basement Climate/temperature'
#  name: basement_temperature
#  friendly_name: Basement Temperature
#  unit_of_measurement: °F
#  retain: true
#  forceupdate: true
 
#- platform: mqtt
#  state_topic: 'smartthings/Basement Climate/humidity'
#  name: basement_humidity
#  friendly_name: Basement Temperature
#  unit_of_measurement: '%'
#  retain: true
#  forceupdate: true
 
#- platform: mqtt
 # state_topic: "smartthings/Sofia Room Temperature/temperature"
 # name: sofias_room_temperature
 # friendly_name: Sofias Room Temperature
 # unit_of_measurement: °F
 # retain: true
 # forceupdate: true
  
#- platform: mqtt
#  state_topic: "smartthings/Sofia Room Temperature/humidity"
#  name: sofias_room_humidity
#  friendly_name: Sofias Room Humidity
#  unit_of_measurement: "%"
#  retain: true
#  forceupdate: true
  
#- platform: mqtt
#  state_topic: "smartthings/Bedroom Climate/temperature"
#  name: bedroom_temperature
#  friendly_name: Bedroom Temperature
#  unit_of_measurement: °F
#  retain: true
#  forceupdate: true
  
#- platform: mqtt
#  state_topic: "smartthings/Bedroom Climate/humidity"
#  name: bedroom_humidity
#  friendly_name: Bedroom Humidity
#  unit_of_measurement: "%"
#  retain: true
#  forceupdate: true
  
- platform: mqtt
  state_topic: "smartthings/Outdoor Weather/temperature"
  name: outdoor_temperature
  friendly_name: Outdoor Temperature
  unit_of_measurement: °F
  retain: true
  forceupdate: true
  
- platform: mqtt
  state_topic: "smartthings/Outdoor Weather/humidity"
  name: outdoor_humidity
  friendly_name: Outdoor Humidity
  unit_of_measurement: "%"
  retain: true
  forceupdate: true

# PLANT GATEWAY MQTT SENSORS
- platform: mqtt
  name: plant_mqtt_basil_1_moisture
  friendly_name: Basil Soil Moisture
  state_topic: "plantgateway/raw/basil_1"
  value_template: '{{ value_json.moisture }}'
  unit_of_measurement: '%'
  retain: true

- platform: mqtt   
  name: plant_mqtt_basil_1_battery
  friendly_name: Basil Node Battery
  state_topic: "plantgateway/raw/basil_1"
  value_template: '{{ value_json.battery }}'
  unit_of_measurement: '%'
  forceupdate: true
  retain: true

- platform: mqtt
  name: plant_mqtt_basil_1_temperature
  friendly_name: Basil Ambient Temperature
  state_topic: "plantgateway/raw/basil_1"
  value_template: '{{ float(value_json.temperature) * 9 / 5 + 32 }}'
  retain: true
  unit_of_measurement: °F
  
- platform: mqtt
  name: plant_mqtt_basil_1_conductivity
  friendly_name: Basil Soil Conductivity
  state_topic: "plantgateway/raw/basil_1"
  value_template: '{{ value_json.conductivity }}'
  unit_of_measurement: "uS/cm"
  retain: true
  
- platform: mqtt
  name: plant_mqtt_basil_1_brightness
  friendly_name: Basil Ambient Light
  state_topic: "plantgateway/raw/basil_1"
  value_template: '{{ value_json.brightness }}'
  unit_of_measurement: lx
  retain: true
  
- platform: mqtt
  name: plant_mqtt_plant_2_moisture
  friendly_name: Plant 2 Soil Moisture
  state_topic: "plantgateway/raw/plant_2"
  value_template: '{{ value_json.moisture }}'
  unit_of_measurement: '%'
  retain: true

- platform: mqtt   
  name: plant_mqtt_plant_2_battery
  friendly_name: Plant 2 Node Battery
  state_topic: "plantgateway/raw/plant_2"
  value_template: '{{ value_json.battery }}'
  unit_of_measurement: '%'
  forceupdate: true
  retain: true

- platform: mqtt
  name: plant_mqtt_plant_2_temperature
  friendly_name: Plant 2 Ambient Temperature
  state_topic: "plantgateway/raw/plant_2"
  value_template: '{{ float(value_json.temperature) * 9 / 5 + 32 }}'
  retain: true
  unit_of_measurement: °F
  
- platform: mqtt
  name: plant_mqtt_plant_2_conductivity
  friendly_name: Plant 2 Soil Conductivity
  state_topic: "plantgateway/raw/plant_2"
  value_template: '{{ value_json.conductivity }}'
  unit_of_measurement: "uS/cm"
  retain: true
  
- platform: mqtt
  name: plant_mqtt_plant_2_brightness
  friendly_name: Plant 2 Ambient Light
  state_topic: "plantgateway/raw/plant_2"
  value_template: '{{ value_json.brightness }}'
  unit_of_measurement: lx
  retain: true
  
- platform: mqtt
  name: plant_mqtt_plant_3_moisture
  friendly_name: Plant 3 Soil Moisture
  state_topic: "plantgateway/raw/plant_3"
  value_template: '{{ value_json.moisture }}'
  unit_of_measurement: '%'
  retain: true

- platform: mqtt   
  name: plant_mqtt_plant_3_battery
  friendly_name: Plant 3 Node Battery
  state_topic: "plantgateway/raw/plant_3"
  value_template: '{{ value_json.battery }}'
  unit_of_measurement: '%'
  forceupdate: true
  retain: true

- platform: mqtt
  name: plant_mqtt_plant_3_temperature
  friendly_name: Plant 3 Ambient Temperature
  state_topic: "plantgateway/raw/plant_3"
  value_template: '{{ float(value_json.temperature) * 9 / 5 + 32 }}'
  retain: true
  unit_of_measurement: °F
  
- platform: mqtt
  name: plant_mqtt_plant_3_conductivity
  friendly_name: Plant 3 Soil Conductivity
  state_topic: "plantgateway/raw/plant_3"
  value_template: '{{ value_json.conductivity }}'
  unit_of_measurement: "uS/cm"
  retain: true
  
- platform: mqtt
  name: plant_mqtt_plant_3_brightness
  friendly_name: Plant 3 Ambient Light
  state_topic: "plantgateway/raw/plant_3"
  value_template: '{{ value_json.brightness }}'
  unit_of_measurement: lx
  retain: true

- platform: mqtt
  name: plant_mqtt_plant_4_moisture
  friendly_name: Plant 4 Soil Moisture
  state_topic: "plantgateway/raw/plant_4"
  value_template: '{{ value_json.moisture }}'
  unit_of_measurement: '%'
  retain: true

- platform: mqtt   
  name: plant_mqtt_plant_4_battery
  friendly_name: Plant 4 Node Battery
  state_topic: "plantgateway/raw/plant_4"
  value_template: '{{ value_json.battery }}'
  unit_of_measurement: '%'
  forceupdate: true
  retain: true

- platform: mqtt
  name: plant_mqtt_plant_4_temperature
  friendly_name: Plant 4 Ambient Temperature
  state_topic: "plantgateway/raw/plant_4"
  value_template: '{{ float(value_json.temperature) * 9 / 5 + 32 }}'
  retain: true
  unit_of_measurement: °F
  
- platform: mqtt
  name: plant_mqtt_plant_4_conductivity
  friendly_name: Plant 4 Soil Conductivity
  state_topic: "plantgateway/raw/plant_4"
  value_template: '{{ value_json.conductivity }}'
  unit_of_measurement: "uS/cm"
  retain: true
  
- platform: mqtt
  name: plant_mqtt_plant_4_brightness
  friendly_name: Plant 4 Ambient Light
  state_topic: "plantgateway/raw/plant_4"
  value_template: '{{ value_json.brightness }}'
  unit_of_measurement: lx
  retain: true

- platform: mqtt
  name: plant_mqtt_plant_5_moisture
  friendly_name: Front Garden Soil Moisture
  state_topic: "plantgateway/raw/plant_5"
  value_template: '{{ value_json.moisture }}'
  unit_of_measurement: '%'
  retain: true

- platform: mqtt   
  name: plant_mqtt_plant_5_battery
  friendly_name: Garden Node Battery
  state_topic: "plantgateway/raw/plant_5"
  value_template: '{{ value_json.battery }}'
  unit_of_measurement: '%'
  forceupdate: true
  retain: true

- platform: mqtt
  name: plant_mqtt_plant_5_temperature
  friendly_name: Garden Ambient Temperature
  state_topic: "plantgateway/raw/plant_5"
  value_template: '{{ float(value_json.temperature) * 9 / 5 + 32 }}'
  retain: true
  unit_of_measurement: °F
  
- platform: mqtt
  name: plant_mqtt_plant_5_conductivity
  friendly_name: Garden Soil Conductivity
  state_topic: "plantgateway/raw/plan_5"
  value_template: '{{ value_json.conductivity }}'
  unit_of_measurement: "uS/cm"
  retain: true
  
- platform: mqtt
  name: plant_mqtt_plant_5_brightness
  friendly_name: Garden Ambient Light
  state_topic: "plantgateway/raw/plant_5"
  value_template: '{{ value_json.brightness }}'
  unit_of_measurement: lx
  retain: true
# XIAOMI HUB SENSORS
      
- platform: xiaomi_aqara
  name: bedroom_illumination
  friendly_name: Bedroom Illumination
  unit_of_measurement: lx
 
- platform: xiaomi_aqara
  name: front_room_temperature
  friendly_name: Front Room Temperature 
  unit_of_measurement: °F
  
- platform: xiaomi_aqara
  name: front_room_humidity
  friendly_name: Front Room Humidity
  unit_of_measurement: '%'
  
- platform: xiaomi_aqara
  name: office_temperature
  friendly_name: Office Temperature
  unit_of_measurement: °F
  
- platform: xiaomi_aqara
  name: office_humidity
  friendly_name: Office Humidity
  unit_of_measurement: "%"

- platform: xiaomi_aqara
  name: basement_temperature
  friendly_name: Basement Temperature 
  unit_of_measurement: °F
  
- platform: xiaomi_aqara
  name: basement_humidity
  friendly_name: Basement Humidity
  unit_of_measurement: '%'
  
- platform: xiaomi_aqara
  name: bedroom_temperature
  friendly_name: Bedroom Temperature 
  unit_of_measurement: °F
  
- platform: xiaomi_aqara
  name: bedroom_humidity
  friendly_name: Bedroom Humidity
  unit_of_measurement: '%'

- platform: xiaomi_aqara
  name: sofias_room_temperature
  friendly_name: Sofia's Room Temperature 
  unit_of_measurement: °F
  
- platform: xiaomi_aqara
  name: sofias_room_humidity
  friendly_name: Sofia's Room Humidity
  unit_of_measurement: '%'
  
 # TEMPLATE SENSORS
 
- platform: template
  sensors:
    plex_aftv:
      friendly_name: Plex (AFTV2)
      value_template: >-
        {% if states.media_player.aftn.state == 'playing' %}
        {{ states.media_player.aftn.attributes.media_title }}
        {% else %}
         Nothing
        {% endif %}   
 
- platform: template
  sensors:
    upstairs_avg_temperature:
      friendly_name: Upstairs Average Temperature
      icon_template: mdi:thermometer
      value_template: >-
        {% if (is_state('sensor.office_temperature','unknown') or is_state('sensor.sofias_room_temperature','unknown') or is_state('bedroom_temperature.state','unknown')) %}
           Unknown
         {% else %}
           {{ (( float(states.sensor.office_temperature.state) + float(states.sensor.bedroom_temperature.state) + float(states.sensor.sofias_room_temperature.state) + float(states.sensor.upstairs_thermostat_temperature.state)) / 4) | round(1) }}
         {% endif %}
      unit_of_measurement: °F
      
- platform: template
  sensors:
    upstairs_avg_humidity:
      friendly_name: Upstairs Average Humidity
      icon_template: mdi:thermometer
      value_template: >-
        {% if (is_state('sensor.office_humidity','unknown') or is_state('sensor.sofias_room_humidity','unknown') or is_state('bedroom_humidity.state','unknown')) %}
           Unknown
         {% else %}
           {{ (( float(states.sensor.office_humidity.state) + float(states.sensor.bedroom_humidity.state) + float(states.sensor.sofias_room_humidity.state) + float(states.sensor.upstairs_thermostat_temperature.state)) / 4) | round(1) }}
         {% endif %}
      unit_of_measurement: "%"

- platform: template
  sensors:
    downstairs_avg_temperature:
      friendly_name: Downstairs Average Temperature
      icon_template: mdi:thermometer
      value_template: >-
        {% if (is_state('sensor.front_room_temperature','unknown')) %}
           Unknown
         {% else %}
           {{ (( float(states.sensor.front_room_temperature.state) + float(states.sensor.downstairs_thermostat_temperature.state)) / 2) | round(1) }}
         {% endif %}
      unit_of_measurement: °F
    downstairs_avg_humidity:
      friendly_name: Downstairs Average Humidity
      icon_template: mdi:thermometer
      value_template: >-
        {% if (is_state('sensor.front_room_humidity','unknown')) %}
           Unknown
         {% else %}
           {{ (( float(states.sensor.front_room_humidity.state) + float(states.sensor.downstairs_thermostat_humidity.state)) / 2) | round(1) }}
         {% endif %}
      unit_of_measurement: '%'
      
- platform: template
  sensors:
    mud_room_temperature:
      friendly_name: 'Mud Room Temperature'
      value_template: '{{ ((float(states.sensor.mud_room_motion_sensor.attributes.temperature) * 9 / 5) + 32) | round(1) }}'
      unit_of_measurement: °F

- platform: template
  sensors:
    pixel2_battery:
      friendly_name: "Pixel2 Battery"
      unit_of_measurement: "%"
      value_template: '{{ states.device_tracker.ant_pixel2.attributes.battery  | round(0) }}'
      
# - platform: mqtt
#  state_topic: "owntracks/ant/pixel2"
#  name: "Pixel2 Battery"
#  unit_of_measurement: "%"
#  value_template: '{{ value_json.batt }}'
      
  # MOTION SENSOR RE-TEMPLATING
- platform: template
  sensors:
    mud_room_motion_template:
      friendly_name: 'Mud Room Motion'
      value_template: >-
        {% if is_state('sensor.mud_room_motion_sensor', 'on') %}Active{% else %}Clear{% endif %}
      icon_template: >-
        {% if is_state('sensor.mud_room_motion_sensor', 'on') %}
          mdi:run-fast
        {% else %}
          mdi:human-handsup
         {% endif %}
    garage_motion_template:
      friendly_name: 'Garage Motion'
      value_template: >-
        {% if is_state('binary_sensor.garage_lightify', 'on') %}Active{% else %}Clear{% endif %}
      icon_template: >-
        {% if is_state('binary_sensor.garage_lightify', 'on') %}
          mdi:run-fast
        {% else %}
          mdi:human-handsup
         {% endif %}
    office_motion_template:
      friendly_name: 'Office Motion'
      value_template: >-
        {% if is_state('input_boolean.dlink_office_motion', 'on') %} Active {% else %} Clear {% endif %}
      icon_template: >-
        {% if is_state('input_boolean.dlink_office_motion', 'on') %}
          mdi:run-fast
        {% else %}
          mdi:human-handsup
         {% endif %}
 
# ILLUMINATION 
- platform: template
  sensors:
    mud_room_light_level:
      friendly_name: 'Mud Room Light Level'
      value_template: '{{ float(10**((states.sensor.mud_room_motion_sensor.attributes.light_level-1)/10000)) | round(2) }}'
      unit_of_measurement: lx
 
 # BODY METRICS
- platform: template
  sensors:
    ant_weight_sensor:
      friendly_name: 'Weight'
      value_template: '{{ states.input_number.ant_weight.state }}'
      unit_of_measurement: lbs
    ant_bf_pct_sensor:
      friendly_name: 'BF%'
      value_template: '{{ states.input_number.ant_bf_pct.state }}'
      unit_of_measurement: "%"
    ant_lean_mass_sensor:
      friendly_name: 'Lean Mass'
      value_template: '{{ states.input_number.ant_lean_mass.state }}'
      unit_of_measurement: lbs
    ant_fat_mass_sensor:
      friendly_name: 'Fat Mass'
      value_template: '{{ states.input_number.ant_fat_mass.state }}'
      unit_of_measurement: lbs
    ant_measurement_taken:
      friendly_name: 'Weighed @'
      value_template: '{{ states.input_datetime.ant_weigh_datetime.state }}'

- platform: filter
  name: ant_weight_smooth
  entity_id: sensor.ant_weight_sensor
  friendly_name: Weight Trend
  unit_of_measurement: lbs
  history_period: 72:00:00
  filters:
    - filter: outlier
      window_size: 5
      radius: 2
    - filter: lowpass
      time_constant: 15
      
- platform: filter
  name: ant_bf_pct_smooth
  entity_id: sensor.ant_bf_pct_sensor
  friendly_name: BF% Trend
  unit_of_measurement: lbs
  history_period: 72:00:00
  filters:
    - filter: outlier
      window_size: 5
      radius: 2
    - filter: lowpass
      time_constant: 15

#- platform: filter
#  name: ant_lean_mass_sensor
#  entity_id: input_number.ant_lean_mass
#  friendly_name: 'Lean Mass'
#  unit_of_measurement: lbs
#  filters:
#    - filter: outlier
#      window_size: 7
#      radius: 3
#    - filter: lowpass
#      time_constant: 10
      
- platform: template
  sensors:
    nextsunrise:
       friendly_name: 'Next Sunrise'
       value_template: "{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom('%D %-I:%M %P') }}"
    nextsunset:
      friendly_name: 'Next Sunset'
      value_template: "{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom('%D %-I:%M %P') }}"
    dayofyear:
      friendly_name: 'Day Number'
      value_template: "{{ now().strftime('%j') }}"
    weekofyear:
      friendly_name: 'Week Number'
      value_template: "{{ now().strftime('%U') }}"

- platform: template
  sensors:
    sunset_time:
      friendly_name: Sunset
      icon_template: mdi:weather-sunset-down
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%H:%M") }}' 

- platform: template
  sensors:
    sunrise_time:
      friendly_name: Sunrise
      icon_template: mdi:weather-sunset-up
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising) |  timestamp_custom("%H:%M") }}' 
      
- platform: template
  sensors:
    moonphases:
      friendly_name: Moon Phase
      value_template: '{{ states.sensor.moon.state }}'
      entity_picture_template: >-
          {%- if is_state('sensor.moon', 'New moon') -%}
            /local/MoonPhases/NNewMoon.jpg
          {%- elif is_state('sensor.moon', 'Waxing crescent') -%}
            /local/MoonPhases/NWaxingCrescent.jpg
          {%- elif is_state('sensor.moon', 'First quarter') -%}
             /local/MoonPhases/NFirstQuarter.jpg
          {%- elif is_state('sensor.moon', 'Waxing gibbous') -%}
            /local/MoonPhases/NWaxingGibbous.jpg
          {%- elif is_state('sensor.moon','Full moon') -%}
            /local/MoonPhases/NFullMoon.jpg
          {%- elif is_state('sensor.moon', 'Waning gibbous') -%}
            /local/MoonPhases/NWaningGibbous.jpg
          {%- elif is_state('sensor.moon', 'Last quarter') -%}
            /local/MoonPhases/NLastQuarter.jpg
          {%- elif is_state('sensor.moon', 'Waning crescent') -%}
            /local/MoonPhases/NWaningCrescent.jpg
          {%- else -%}
            unknown
          {%- endif -%} 



